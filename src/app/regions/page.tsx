import type { Metadata } from "next";
import Image from 'next/image';
import styles from './regions.module.css';

export const metadata: Metadata = {
    title: "Alma: Age-PRO - Regions",
    description: "Generated by create next app",
  };

const RegionsData = {
    Ophiuchus: {
        info: 'Ophiuchus es una constelación ubicada cerca del ecuador celeste. Su nombre significa "portador de serpientes".',
        table: [
            { Disco: 'A', Distancia: '120 pc', Inclinación: '30°', PA: '60°', Campo5: '...', Campo6: '...', Campo7: '...', Campo8: '...', Campo9: '...', Campo10: '...', Campo11: '...' },
            { Disco: 'B', Distancia: '150 pc', Inclinación: '45°', PA: '75°', Campo5: '...', Campo6: '...', Campo7: '...', Campo8: '...', Campo9: '...', Campo10: '...', Campo11: '...' },
            { Disco: 'C', Distancia: '200 pc', Inclinación: '60°', PA: '90°', Campo5: '...', Campo6: '...', Campo7: '...', Campo8: '...', Campo9: '...', Campo10: '...', Campo11: '...' },
            { Disco: 'D', Distancia: '120 pc', Inclinación: '30°', PA: '60°', Campo5: '...', Campo6: '...', Campo7: '...', Campo8: '...', Campo9: '...', Campo10: '...', Campo11: '...' },
            { Disco: 'E', Distancia: '150 pc', Inclinación: '45°', PA: '75°', Campo5: '...', Campo6: '...', Campo7: '...', Campo8: '...', Campo9: '...', Campo10: '...', Campo11: '...' },
            { Disco: 'F', Distancia: '200 pc', Inclinación: '60°', PA: '90°', Campo5: '...', Campo6: '...', Campo7: '...', Campo8: '...', Campo9: '...', Campo10: '...', Campo11: '...' },
            // Añadir más filas si es necesario
        ],
    },
    Lupus: {
        info: 'Lupus es una constelación del hemisferio sur. Su nombre significa "lobo" en latín.',
        table: [
            { Disco: 'A', Distancia: '120 pc', Inclinación: '30°', PA: '60°', Campo5: '...', Campo6: '...', Campo7: '...', Campo8: '...', Campo9: '...', Campo10: '...', Campo11: '...' },
            { Disco: 'B', Distancia: '150 pc', Inclinación: '45°', PA: '75°', Campo5: '...', Campo6: '...', Campo7: '...', Campo8: '...', Campo9: '...', Campo10: '...', Campo11: '...' },
            { Disco: 'C', Distancia: '200 pc', Inclinación: '60°', PA: '90°', Campo5: '...', Campo6: '...', Campo7: '...', Campo8: '...', Campo9: '...', Campo10: '...', Campo11: '...' },
            // Añadir más filas si es necesario
        ],
    },
    UppSco: {
        info: 'UppSco es una región de formación estelar en la constelación de Scorpius.',
        table: [
            { Disco: 'A', Distancia: '120 pc', Inclinación: '30°', PA: '60°', Campo5: '...', Campo6: '...', Campo7: '...', Campo8: '...', Campo9: '...', Campo10: '...', Campo11: '...' },
            { Disco: 'B', Distancia: '150 pc', Inclinación: '45°', PA: '75°', Campo5: '...', Campo6: '...', Campo7: '...', Campo8: '...', Campo9: '...', Campo10: '...', Campo11: '...' },
            { Disco: 'C', Distancia: '200 pc', Inclinación: '60°', PA: '90°', Campo5: '...', Campo6: '...', Campo7: '...', Campo8: '...', Campo9: '...', Campo10: '...', Campo11: '...' },
            // Añadir más filas si es necesario
        ],
    },
};


const Regions = () => {
    return (
        <div className={styles.container}>
            <div className={styles.info}>
                <h1 className={styles.title}>Regions</h1>
                <hr className={styles.line} />
                {Object.keys(RegionsData).map((region) => (
                    <div key={region} className={styles.region}>
                        <h2 className={styles.regionTitle}>{region}</h2>
                        <p className={styles.regionInfo}>{RegionsData[region as keyof typeof RegionsData].info}</p>
                        <div className={styles.tableContainer}>
                            <table className={styles.table}>
                                <thead>
                                    <tr>
                                        <th className={styles.th}>Disk</th>
                                        <th className={styles.th}>Distance</th>
                                        <th className={styles.th}>Inclination</th>
                                        <th className={styles.th}>P.A.</th>
                                        <th className={styles.th}>SpT</th>
                                        <th className={styles.th}>T<sub>eff</sub></th>
                                        <th className={styles.th}>L<sub>*</sub></th>
                                        <th className={styles.th}>Age</th>
                                        <th className={styles.th}>M<sub>*</sub></th>
                                        <th className={styles.th}>Log<sub>10</sub> M</th>
                                        <th className={styles.th}>V<sub>sys</sub></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {RegionsData[region as keyof typeof RegionsData].table.map((row, index) => (
                                        <tr key={index} className={index % 2 === 0 ? styles.evenRow : ''}>
                                            {Object.values(row).map((value, i) => (
                                                <td key={i} className={styles.td}>{value}</td>
                                            ))}
                                        </tr>
                                    ))}
                                </tbody>
                            </table>
                        </div>
                    </div>
                ))}
            </div>
        </div>
    );
};

export default Regions;
